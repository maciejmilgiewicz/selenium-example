plugins {
    id 'java'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

ext {
    commonsVersion = '2.14.0'
    cucumberVersion = '7.14.0'
    junitVersion = '5.9.2'
    lombokVersion = '1.18.30'
    opencsvVersion = '5.8'
    seleniumVersion = '4.13.0'
    slf4jVersion = '2.0.5'
    typesafeVersion = '1.4.2'
}

group 'com.macmil'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}

task uiTest {
    description = 'Runs UI tests.'
    group = 'verification'

    dependsOn assemble, testClasses

    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            def tags = findProperty('tags') ?: ''
            args = ['--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--plugin', 'json:target/test-report.json',
                    '--glue', 'com.macmil', 'src/test/resources/features',
                    '--tags', tags]
        }
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "commons-io:commons-io:${commonsVersion}"
    implementation "com.opencsv:opencsv:${opencsvVersion}"
    implementation "com.typesafe:config:${typesafeVersion}"
    implementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junitVersion}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junitVersion}"
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

test {
    useJUnitPlatform()
}
